<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="app_name">TunesViewer</string>
    <string name="download_title">Download</string>
    <string name="menuSearch">Search</string>
    <string name="menuHome">Home</string>
    <string name="menuCopyUrl">Copy Page Url</string>
    <string name="menuGo">Go</string>
    <string name="Javascript" formatted="false">"/*
 * iTunes Javascript Class, added to the displayed pages.
 * Catches iTunes-api calls from pages, such as http://r.mzstatic.com/htmlResources/6018/dt-storefront-base.jsz
 */
function player () {
	this.playURL = function(input) {
		var div = document.createElement('div');
		div.setAttribute('class','quick-view video movie active activity-video-dialog');
		div.setAttribute('style','width:50%; height:auto; position:fixed; left: 25%; float: top ; top:10px');
		div.setAttribute('id','previewer-container')
		a = document.createElement('a');
		a.setAttribute('class','close-preview');
		a.addEventListener('click',function() {
			this.parentNode.parentNode.removeChild(this.parentNode);
		} );
		div.appendChild(a);
		var vid = document.createElement('video');
		vid.id = 'previewPlayer';
		vid.setAttribute('controls','true')
		div.appendChild(vid)
		document.body.appendChild(div);
		document.getElementById('previewPlayer').src=input.url;
		document.getElementById('previewPlayer').play()
		return 'not 0';
	};
	this.stop = function() {
		document.getElementById('previewer-container').parentNode.removeChild(document.getElementById('previewer-container'))
		return true;
	};
	
	this.doPodcastDownload = function(obj, number) {
		alert('podcastdownload');
		console.log(obj.getAttribute('description'));
		console.log(obj.getAttribute('episode-url'));
		window.DOWNLOADINTERFACE.download(obj.getAttribute('description'),obj.getAttribute('episode-url'));
		alert(obj.getAttribute('episode-url'))
	};
	/*This may mess up normal operation by opening two identical files with different urls, duplicate notification, also
	webview crashing.
	this.doAnonymousDownload = function(obj) {
		window.DOWNLOADINTERFACE.download(obj.itemName,obj.url);
		}*/
}

function defined(something) {
	return true;
}

function iTSVideoPreviewWithObject (obj) {
	alert(obj);
}

function fixTransparent(objects) {
	for (i=0; i&lt;objects.length; i++) {
		// If the heading is transparent, show it.
		if (window.getComputedStyle(objects[i]).color=='rgba(0, 0, 0, 0)') {
			objects[i].style.color = 'inherit';
		}
		
		//Fix odd background box on iTunesU main page
		if (objects[i].parentNode.getAttribute('class')=='title') {
			objects[i].style.background='transparent'
		}
	}
}

document.onload= new function() {
	iTunes = new player();
	
	as = document.getElementsByTagName('a');
	for (a in as) {as[a].target=''}
	fixTransparent(document.getElementsByTagName('h1'));
	fixTransparent(document.getElementsByTagName('h2'));
	fixTransparent(as);
	
buttons = document.getElementsByTagName('button');
for (i=0; i&lt;buttons.length; i++) {
	if (buttons[i].getAttribute('subscribe-podcast-url')!=null) {
		buttons[i].addEventListener('click',function ()
		{location.href=this.getAttribute('subscribe-podcast-url');},true);
	} else if (buttons[i].getAttribute('anonymous-download-url')) {
		buttons[i].addEventListener('click',function ()
		{location.href=this.getAttribute('anonymous-download-url');},true);
	} else if (buttons[i].getAttribute('episode-url')!=null) {
		buttons[i].addEventListener('click',function ()
		{ window.DOWNLOADINTERFACE.download(this.getAttribute('title'),this.getAttribute('episode-url')); },true);
	}
}
}
    "</string>
    <!-- 

function defined(something) {
	return true;
};

function iTSVideoPreviewWithObject (obj) {
	alert(obj);
};

	iTunes = new player();
	as = document.getElementsByTagName("a");
	for (a in as) {as[a].target=""};
     -->
</resources>
